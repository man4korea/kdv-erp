{
  "tasks": [
    {
      "id": "13b4a9fe-d0c7-40e9-a640-a970a770b760",
      "name": "로그인 우선 표시 구조 변경",
      "description": "현재 index.html이 대시보드로 되어있으나, 미로그인 사용자가 처음 접속시 로그인 페이지가 먼저 나타나도록 구조 개선. Firebase 인증 상태 확인을 최적화하여 더 빠른 리디렉션 구현",
      "notes": "기존 auth.js 모듈의 checkExistingSession() 메서드를 활용하되, 더 빠른 반응을 위해 Firebase onAuthStateChanged 이벤트 직접 활용",
      "status": "進行中",
      "dependencies": [],
      "createdAt": "2025-05-25T10:23:13.529Z",
      "updatedAt": "2025-05-25T10:23:19.613Z",
      "relatedFiles": [
        {
          "path": "index.html",
          "type": "TO_MODIFY",
          "description": "대시보드 HTML - Firebase 인증 체크 로직 개선",
          "lineStart": 200,
          "lineEnd": 250
        },
        {
          "path": "js/dashboard.js",
          "type": "TO_MODIFY",
          "description": "대시보드 JS - 인증 상태 체크 최적화",
          "lineStart": 20,
          "lineEnd": 60
        }
      ],
      "implementationGuide": "기존 dashboard.js의 Firebase 인증 체크 로직을 개선:\\n1. 로딩 화면을 더 빠르게 표시\\n2. Firebase auth.onAuthStateChanged 콜백에서 즉시 인증 상태 판단\\n3. 미로그인시 login.html로 즉시 리디렉션\\n4. 로그인된 경우에만 대시보드 콘텐츠 로드\\nif (!firebaseUser) { window.location.href = 'login.html'; return; }",
      "verificationCriteria": "미로그인시 login.html이 1초 이내 표시되고, 로그인시 대시보드가 정상 로드되는지 확인. Playwright로 두 가지 시나리오 테스트",
      "analysisResult": "HTML/CSS/JS 기반 웹앱을 Firebase 인증 기반 인사관리시스템으로 전환. 기존 Firebase 인증 시스템과 UI 컨트롤러 구조를 최대한 활용하면서 사이드바 메뉴를 인사관리 중심으로 재구성하고, 로그인 우선 표시 및 관리자 권한 기능을 구현"
    },
    {
      "id": "baafe819-ec10-4f31-8c62-52af237db10b",
      "name": "사이드바 메뉴 구조 재설계",
      "description": "기존 CorpEasy 스타일 메뉴를 인사관리시스템 중심으로 변경. 메인 메뉴: 인사관리시스템(직원명부관리), 문서관리시스템, 양식관리시스템, 사규관리시스템으로 구성하고 현재는 인사관리만 활성화",
      "notes": "기존 사이드바 동작 로직(햄버거 버튼, 오버레이 등)은 그대로 유지하고 메뉴 구조만 변경",
      "status": "待處理",
      "dependencies": [],
      "createdAt": "2025-05-25T10:23:13.529Z",
      "updatedAt": "2025-05-25T10:23:13.529Z",
      "relatedFiles": [
        {
          "path": "index.html",
          "type": "TO_MODIFY",
          "description": "메인 대시보드의 사이드바 HTML 구조",
          "lineStart": 45,
          "lineEnd": 120
        },
        {
          "path": "pages/hr/employee-list.html",
          "type": "TO_MODIFY",
          "description": "직원 목록 페이지의 사이드바도 동일하게 수정",
          "lineStart": 350,
          "lineEnd": 420
        },
        {
          "path": "components/Sidebar.html",
          "type": "REFERENCE",
          "description": "사이드바 컴포넌트 참조용"
        }
      ],
      "implementationGuide": "기존 Sidebar.html과 index.html의 사이드바 구조 수정:\\n1. 기존 메뉴 항목들을 새로운 4개 시스템으로 교체\\n2. 인사관리시스템 서브메뉴: 직원명부관리만 활성화\\n3. 나머지 시스템들은 '준비중' 배지와 showComingSoon() 함수 연결\\n4. 메뉴 아이콘을 적절한 FontAwesome 아이콘으로 변경\\n5. CSS 클래스는 기존 styles.css의 sidebar 관련 클래스 재사용",
      "verificationCriteria": "새로운 4개 메뉴가 표시되고, 인사관리 서브메뉴만 정상 동작하며, 나머지는 '준비중' 알림이 표시되는지 확인",
      "analysisResult": "HTML/CSS/JS 기반 웹앱을 Firebase 인증 기반 인사관리시스템으로 전환. 기존 Firebase 인증 시스템과 UI 컨트롤러 구조를 최대한 활용하면서 사이드바 메뉴를 인사관리 중심으로 재구성하고, 로그인 우선 표시 및 관리자 권한 기능을 구현"
    },
    {
      "id": "5d268e6b-0393-4ba3-9c82-1a99383f515b",
      "name": "관리자 권한별 메뉴 표시 기능",
      "description": "로그인한 사용자가 관리자인 경우 사이드바 하단에 관리자 전용 메뉴를 동적으로 추가. 기존 auth-validators.js의 isAdmin() 함수를 활용하여 권한 체크",
      "notes": "기존 auth-validators.js의 권한 체크 로직을 그대로 활용하고, CSS는 기존 sidebar 스타일 재사용",
      "status": "待處理",
      "dependencies": [
        {
          "taskId": "13b4a9fe-d0c7-40e9-a640-a970a770b760"
        }
      ],
      "createdAt": "2025-05-25T10:23:13.529Z",
      "updatedAt": "2025-05-25T10:23:13.529Z",
      "relatedFiles": [
        {
          "path": "js/dashboard.js",
          "type": "TO_MODIFY",
          "description": "관리자 메뉴 동적 생성 로직 추가",
          "lineStart": 80,
          "lineEnd": 120
        },
        {
          "path": "js/auth-validators.js",
          "type": "REFERENCE",
          "description": "isAdmin() 함수 활용"
        },
        {
          "path": "index.html",
          "type": "TO_MODIFY",
          "description": "관리자 메뉴 DOM 삽입 위치",
          "lineStart": 115,
          "lineEnd": 125
        }
      ],
      "implementationGuide": "기존 인증 시스템 활용한 동적 메뉴 생성:\\n1. dashboard.js에서 사용자 정보 로드 시 isAdmin(currentUser) 체크\\n2. 관리자인 경우 사이드바에 관리자 메뉴 DOM 요소 추가\\n3. 메뉴 항목: 사용자 관리, 시스템 설정, 로그 관리 등\\n4. 일반 사용자에게는 해당 메뉴 숨김\\nif (isAdmin(currentUser)) { addAdminMenuItems(); }",
      "verificationCriteria": "관리자 계정(man4korea@gmail.com)으로 로그인시 관리자 메뉴가 표시되고, 일반 계정으로는 표시되지 않는지 확인",
      "analysisResult": "HTML/CSS/JS 기반 웹앱을 Firebase 인증 기반 인사관리시스템으로 전환. 기존 Firebase 인증 시스템과 UI 컨트롤러 구조를 최대한 활용하면서 사이드바 메뉴를 인사관리 중심으로 재구성하고, 로그인 우선 표시 및 관리자 권한 기능을 구현"
    },
    {
      "id": "f40ec531-86d2-40b2-a816-11180b20703b",
      "name": "대시보드 콘텐츠 인사관리 중심 재구성",
      "description": "기존 AI 비서, 콘텐츠 분석 중심 대시보드를 인사관리시스템에 맞게 변경. 메시지 알림, 문서 리스트, 검색 기능, 인사정보 변경 신청 등의 화면으로 구성",
      "notes": "기본 레이아웃과 CSS는 유지하고 콘텐츠 내용만 인사관리에 맞게 교체. 실제 데이터 연동은 추후 단계에서 진행",
      "status": "待處理",
      "dependencies": [
        {
          "taskId": "13b4a9fe-d0c7-40e9-a640-a970a770b760"
        },
        {
          "taskId": "baafe819-ec10-4f31-8c62-52af237db10b"
        }
      ],
      "createdAt": "2025-05-25T10:23:13.529Z",
      "updatedAt": "2025-05-25T10:23:13.529Z",
      "relatedFiles": [
        {
          "path": "index.html",
          "type": "TO_MODIFY",
          "description": "메인 대시보드 콘텐츠 영역",
          "lineStart": 150,
          "lineEnd": 350
        },
        {
          "path": "js/dashboard.js",
          "type": "TO_MODIFY",
          "description": "대시보드 데이터 로딩 로직",
          "lineStart": 120,
          "lineEnd": 160
        },
        {
          "path": "css/dashboard.css",
          "type": "REFERENCE",
          "description": "대시보드 스타일 참조"
        }
      ],
      "implementationGuide": "기존 대시보드 HTML 구조 활용하여 콘텐츠만 변경:\\n1. 통계 카드: 총 직원 수, 이번 달 입사자, 대기 중인 신청, 읽지 않은 메시지\\n2. 차트 영역을 메시지 센터와 최근 문서로 변경\\n3. 최근 활동을 인사 관련 활동으로 교체\\n4. 검색 박스를 직원/문서/양식 통합 검색으로 변경\\n5. 기존 CSS 클래스(dashboard-stats, chart-card 등) 재사용",
      "verificationCriteria": "새로운 인사관리 중심 대시보드가 표시되고, 각 섹션이 적절한 인사 관련 내용을 보여주는지 확인",
      "analysisResult": "HTML/CSS/JS 기반 웹앱을 Firebase 인증 기반 인사관리시스템으로 전환. 기존 Firebase 인증 시스템과 UI 컨트롤러 구조를 최대한 활용하면서 사이드바 메뉴를 인사관리 중심으로 재구성하고, 로그인 우선 표시 및 관리자 권한 기능을 구현"
    },
    {
      "id": "07beb460-5174-4dd8-8160-809d95de73c2",
      "name": "직원명부관리 기능 완성",
      "description": "기존 employee-list.html 페이지를 기반으로 직원 등록, 수정 페이지 구현 및 Firestore 연동 완성. employee.js의 CRUD 기능을 활용하여 완전한 직원 관리 시스템 구축",
      "notes": "기존 employee.js, employee-core.js 등의 모듈을 최대한 활용하고, pages/hr/ 폴더 구조 유지",
      "status": "待處理",
      "dependencies": [
        {
          "taskId": "baafe819-ec10-4f31-8c62-52af237db10b"
        }
      ],
      "createdAt": "2025-05-25T10:23:13.529Z",
      "updatedAt": "2025-05-25T10:23:13.529Z",
      "relatedFiles": [
        {
          "path": "pages/hr/employee-add.html",
          "type": "CREATE",
          "description": "직원 등록 페이지 - employee-list.html 기반으로 생성"
        },
        {
          "path": "pages/hr/employee-edit.html",
          "type": "CREATE",
          "description": "직원 수정 페이지"
        },
        {
          "path": "js/employee.js",
          "type": "TO_MODIFY",
          "description": "직원 관리 핵심 로직 - CRUD 기능 완성",
          "lineStart": 1,
          "lineEnd": 200
        },
        {
          "path": "pages/hr/employee-list.html",
          "type": "TO_MODIFY",
          "description": "기존 목록 페이지와의 연동 보완"
        }
      ],
      "implementationGuide": "기존 직원 관리 모듈 확장:\\n1. employee-add.html 페이지 생성 (employee-list.html 스타일 기반)\\n2. employee-edit.html 페이지 생성\\n3. employee.js의 CRUD 메서드 완성\\n4. Firestore 컬렉션 스키마 설계: employees { name, email, department, position, joinDate, status }\\n5. 유효성 검사 및 에러 처리 구현\\n6. 기존 UI 컨트롤러와 인증 시스템 연동",
      "verificationCriteria": "직원 등록, 수정, 삭제, 조회가 모두 정상 동작하고 Firestore에 데이터가 올바르게 저장되는지 확인",
      "analysisResult": "HTML/CSS/JS 기반 웹앱을 Firebase 인증 기반 인사관리시스템으로 전환. 기존 Firebase 인증 시스템과 UI 컨트롤러 구조를 최대한 활용하면서 사이드바 메뉴를 인사관리 중심으로 재구성하고, 로그인 우선 표시 및 관리자 권한 기능을 구현"
    },
    {
      "id": "39606c4b-2118-473f-ba22-e39036f433fc",
      "name": "Playwright 테스트 시나리오 구현",
      "description": "전체 시스템의 주요 기능들을 Playwright로 자동 테스트. 로그인/로그아웃, 사이드바 동작, 권한별 메뉴 표시, 직원 관리 CRUD 등 핵심 사용자 플로우 검증",
      "notes": "테스트 계정 man4korea@gmail.com/dmlwjdqn@Wkd24 활용. Firebase 테스트 환경을 고려한 적절한 대기 시간 설정",
      "status": "待處理",
      "dependencies": [
        {
          "taskId": "13b4a9fe-d0c7-40e9-a640-a970a770b760"
        },
        {
          "taskId": "baafe819-ec10-4f31-8c62-52af237db10b"
        },
        {
          "taskId": "5d268e6b-0393-4ba3-9c82-1a99383f515b"
        },
        {
          "taskId": "07beb460-5174-4dd8-8160-809d95de73c2"
        }
      ],
      "createdAt": "2025-05-25T10:23:13.529Z",
      "updatedAt": "2025-05-25T10:23:13.529Z",
      "relatedFiles": [
        {
          "path": "tests/main-flow.spec.js",
          "type": "CREATE",
          "description": "주요 사용자 플로우 테스트"
        },
        {
          "path": "tests/auth-test.spec.js",
          "type": "CREATE",
          "description": "인증 관련 테스트"
        },
        {
          "path": "tests/employee-crud.spec.js",
          "type": "CREATE",
          "description": "직원 관리 CRUD 테스트"
        }
      ],
      "implementationGuide": "주요 테스트 시나리오 구현:\\n1. 로그인 플로우: 미로그인 시 로그인 페이지 표시, 로그인 성공 후 대시보드 이동\\n2. 사이드바 테스트: 햄버거 버튼 클릭, 메뉴 선택, 오버레이 클릭으로 닫기\\n3. 권한 테스트: 관리자/일반 사용자별 메뉴 표시 차이\\n4. 직원 관리: 직원 등록→목록 확인→수정→삭제 플로우\\n5. 모든 테스트는 http://localhost:8000 서버 대상",
      "verificationCriteria": "모든 Playwright 테스트가 통과하고, 실제 사용자 시나리오에서 발생할 수 있는 주요 오류들이 검출되지 않는지 확인",
      "analysisResult": "HTML/CSS/JS 기반 웹앱을 Firebase 인증 기반 인사관리시스템으로 전환. 기존 Firebase 인증 시스템과 UI 컨트롤러 구조를 최대한 활용하면서 사이드바 메뉴를 인사관리 중심으로 재구성하고, 로그인 우선 표시 및 관리자 권한 기능을 구현"
    }
  ]
}